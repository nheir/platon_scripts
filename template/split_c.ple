@extends misc/multi_builder.ple

multi_export = {
    "builder_1": ["code_before", "code", "code_after", "soluce", "checks_args_stdin", "title", "statement"],
    "builder_2": ["input"],
    "builder_3": ["CFLAGS", "LDFLAGS", "LDLIBS"],
    "grader_0": ["code"],
    "grader_1": ["executable_name"]
}


# Required :
# subject_code = @copycontent fichier.c

input = :wc-code-editor
input.language = "c"

form==
{{input}}
==

# Create variables for c builder/grader
builder_1 = @extends misc/split.ple

# Fill input
builder_2 ==
input['code'] = code
==

# Build reference code and test output
builder_3 = @extends misc/c.ple

# Get answer
grader_0 ==
code = input["code"]
==

# Compile
grader_1 = @extends misc/c.ple

# Test
grader_2 = @extends misc/executor.ple

# Final grade
grader_3 ==
feedback = {
    "type":"info",
    "content":"Score : {{grade | round}} / 100"
}
==

multi_grade_rule = [0,1,9,0]
